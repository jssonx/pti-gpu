#ifndef PTI_TOOLS_COMMON_H_
#define PTI_TOOLS_COMMON_H_

typedef enum {
  UnknownTracingId,
  ZeKernelTracingId,
  InternalStartTracingId,
  DepTracingId,
  InternalEndTracingId,
  L0StartTracingId,
  InitTracingId,
  DriverGetTracingId,
  DriverGetApiVersionTracingId,
  DriverGetPropertiesTracingId,
  DriverGetIpcPropertiesTracingId,
  DriverGetExtensionPropertiesTracingId,
  DeviceGetTracingId,
  DeviceGetSubDevicesTracingId,
  DeviceGetPropertiesTracingId,
  DeviceGetComputePropertiesTracingId,
  DeviceGetModulePropertiesTracingId,
  DeviceGetCommandQueueGroupPropertiesTracingId,
  DeviceGetMemoryPropertiesTracingId,
  DeviceGetMemoryAccessPropertiesTracingId,
  DeviceGetCachePropertiesTracingId,
  DeviceGetImagePropertiesTracingId,
  DeviceGetExternalMemoryPropertiesTracingId,
  DeviceGetP2PPropertiesTracingId,
  DeviceCanAccessPeerTracingId,
  DeviceGetStatusTracingId,
  ContextCreateTracingId,
  ContextDestroyTracingId,
  ContextGetStatusTracingId,
  ContextSystemBarrierTracingId,
  ContextMakeMemoryResidentTracingId,
  ContextEvictMemoryTracingId,
  ContextMakeImageResidentTracingId,
  ContextEvictImageTracingId,
  CommandQueueCreateTracingId,
  CommandQueueDestroyTracingId,
  CommandQueueExecuteCommandListsTracingId,
  CommandQueueSynchronizeTracingId,
  CommandListCreateTracingId,
  CommandListCreateImmediateTracingId,
  CommandListDestroyTracingId,
  CommandListCloseTracingId,
  CommandListResetTracingId,
  CommandListAppendWriteGlobalTimestampTracingId,
  CommandListAppendBarrierTracingId,
  CommandListAppendMemoryRangesBarrierTracingId,
  CommandListAppendMemoryCopyTracingId,
  CommandListAppendMemoryFillTracingId,
  CommandListAppendMemoryCopyRegionTracingId,
  CommandListAppendMemoryCopyFromContextTracingId,
  CommandListAppendImageCopyTracingId,
  CommandListAppendImageCopyRegionTracingId,
  CommandListAppendImageCopyToMemoryTracingId,
  CommandListAppendImageCopyFromMemoryTracingId,
  CommandListAppendMemoryPrefetchTracingId,
  CommandListAppendMemAdviseTracingId,
  CommandListAppendSignalEventTracingId,
  CommandListAppendWaitOnEventsTracingId,
  CommandListAppendEventResetTracingId,
  CommandListAppendQueryKernelTimestampsTracingId,
  CommandListAppendLaunchKernelTracingId,
  CommandListAppendLaunchCooperativeKernelTracingId,
  CommandListAppendLaunchKernelIndirectTracingId,
  CommandListAppendLaunchMultipleKernelsIndirectTracingId,
  ImageGetPropertiesTracingId,
  ImageCreateTracingId,
  ImageDestroyTracingId,
  FenceCreateTracingId,
  FenceDestroyTracingId,
  FenceHostSynchronizeTracingId,
  FenceQueryStatusTracingId,
  FenceResetTracingId,
  EventPoolCreateTracingId,
  EventPoolDestroyTracingId,
  EventPoolGetIpcHandleTracingId,
  EventPoolOpenIpcHandleTracingId,
  EventPoolCloseIpcHandleTracingId,
  EventCreateTracingId,
  EventDestroyTracingId,
  EventHostSignalTracingId,
  EventHostSynchronizeTracingId,
  EventQueryStatusTracingId,
  EventHostResetTracingId,
  EventQueryKernelTimestampTracingId,
  ModuleCreateTracingId,
  ModuleDestroyTracingId,
  ModuleDynamicLinkTracingId,
  ModuleGetNativeBinaryTracingId,
  ModuleGetGlobalPointerTracingId,
  ModuleGetKernelNamesTracingId,
  ModuleGetPropertiesTracingId,
  ModuleGetFunctionPointerTracingId,
  ModuleBuildLogDestroyTracingId,
  ModuleBuildLogGetStringTracingId,
  KernelCreateTracingId,
  KernelDestroyTracingId,
  KernelSetCacheConfigTracingId,
  KernelSetGroupSizeTracingId,
  KernelSuggestGroupSizeTracingId,
  KernelSuggestMaxCooperativeGroupCountTracingId,
  KernelSetArgumentValueTracingId,
  KernelSetIndirectAccessTracingId,
  KernelGetIndirectAccessTracingId,
  KernelGetSourceAttributesTracingId,
  KernelGetPropertiesTracingId,
  KernelGetNameTracingId,
  SamplerCreateTracingId,
  SamplerDestroyTracingId,
  PhysicalMemCreateTracingId,
  PhysicalMemDestroyTracingId,
  MemAllocSharedTracingId,
  MemAllocDeviceTracingId,
  MemAllocHostTracingId,
  MemFreeTracingId,
  MemGetAllocPropertiesTracingId,
  MemGetAddressRangeTracingId,
  MemGetIpcHandleTracingId,
  MemOpenIpcHandleTracingId,
  MemCloseIpcHandleTracingId,
  VirtualMemReserveTracingId,
  VirtualMemFreeTracingId,
  VirtualMemQueryPageSizeTracingId,
  VirtualMemMapTracingId,
  VirtualMemUnmapTracingId,
  VirtualMemSetAccessAttributeTracingId,
  VirtualMemGetAccessAttributeTracingId,
  L0EndTracingId,
  ClKernelTracingId,
  OpenClTracingId,
  XptiTracingId,
  IttTracingId,
} API_TRACING_ID;

 static std::string tracing_api_name [ ] = {
  "zeInit",
  "zeDriverGet",
  "zeDriverGetApiVersion",
  "zeDriverGetProperties",
  "zeDriverGetIpcProperties",
  "zeDriverGetExtensionProperties",
  "zeDeviceGet",
  "zeDeviceGetSubDevices",
  "zeDeviceGetProperties",
  "zeDeviceGetComputeProperties",
  "zeDeviceGetModuleProperties",
  "zeDeviceGetCommandQueueGroupProperties",
  "zeDeviceGetMemoryProperties",
  "zeDeviceGetMemoryAccessProperties",
  "zeDeviceGetCacheProperties",
  "zeDeviceGetImageProperties",
  "zeDeviceGetExternalMemoryProperties",
  "zeDeviceGetP2PProperties",
  "zeDeviceCanAccessPeer",
  "zeDeviceGetStatus",
  "zeContextCreate",
  "zeContextDestroy",
  "zeContextGetStatus",
  "zeContextSystemBarrier",
  "zeContextMakeMemoryResident",
  "zeContextEvictMemory",
  "zeContextMakeImageResident",
  "zeContextEvictImage",
  "zeCommandQueueCreate",
  "zeCommandQueueDestroy",
  "zeCommandQueueExecuteCommandLists",
  "zeCommandQueueSynchronize",
  "zeCommandListCreate",
  "zeCommandListCreateImmediate",
  "zeCommandListDestroy",
  "zeCommandListClose",
  "zeCommandListReset",
  "zeCommandListAppendWriteGlobalTimestamp",
  "zeCommandListAppendBarrier",
  "zeCommandListAppendMemoryRangesBarrier",
  "zeCommandListAppendMemoryCopy",
  "zeCommandListAppendMemoryFill",
  "zeCommandListAppendMemoryCopyRegion",
  "zeCommandListAppendMemoryCopyFromContext",
  "zeCommandListAppendImageCopy",
  "zeCommandListAppendImageCopyRegion",
  "zeCommandListAppendImageCopyToMemory",
  "zeCommandListAppendImageCopyFromMemory",
  "zeCommandListAppendMemoryPrefetch",
  "zeCommandListAppendMemAdvise",
  "zeCommandListAppendSignalEvent",
  "zeCommandListAppendWaitOnEvents",
  "zeCommandListAppendEventReset",
  "zeCommandListAppendQueryKernelTimestamps",
  "zeCommandListAppendLaunchKernel",
  "zeCommandListAppendLaunchCooperativeKernel",
  "zeCommandListAppendLaunchKernelIndirect",
  "zeCommandListAppendLaunchMultipleKernelsIndirect",
  "zeImageGetProperties",
  "zeImageCreate",
  "zeImageDestroy",
  "zeFenceCreate",
  "zeFenceDestroy",
  "zeFenceHostSynchronize",
  "zeFenceQueryStatus",
  "zeFenceReset",
  "zeEventPoolCreate",
  "zeEventPoolDestroy",
  "zeEventPoolGetIpcHandle",
  "zeEventPoolOpenIpcHandle",
  "zeEventPoolCloseIpcHandle",
  "zeEventCreate",
  "zeEventDestroy",
  "zeEventHostSignal",
  "zeEventHostSynchronize",
  "zeEventQueryStatus",
  "zeEventHostReset",
  "zeEventQueryKernelTimestamp",
  "zeModuleCreate",
  "zeModuleDestroy",
  "zeModuleDynamicLink",
  "zeModuleGetNativeBinary",
  "zeModuleGetGlobalPointer",
  "zeModuleGetKernelNames",
  "zeModuleGetProperties",
  "zeModuleGetFunctionPointer",
  "zeModuleBuildLogDestroy",
  "zeModuleBuildLogGetString",
  "zeKernelCreate",
  "zeKernelDestroy",
  "zeKernelSetCacheConfig",
  "zeKernelSetGroupSize",
  "zeKernelSuggestGroupSize",
  "zeKernelSuggestMaxCooperativeGroupCount",
  "zeKernelSetArgumentValue",
  "zeKernelSetIndirectAccess",
  "zeKernelGetIndirectAccess",
  "zeKernelGetSourceAttributes",
  "zeKernelGetProperties",
  "zeKernelGetName",
  "zeSamplerCreate",
  "zeSamplerDestroy",
  "zePhysicalMemCreate",
  "zePhysicalMemDestroy",
  "zeMemAllocShared",
  "zeMemAllocDevice",
  "zeMemAllocHost",
  "zeMemFree",
  "zeMemGetAllocProperties",
  "zeMemGetAddressRange",
  "zeMemGetIpcHandle",
  "zeMemOpenIpcHandle",
  "zeMemCloseIpcHandle",
  "zeVirtualMemReserve",
  "zeVirtualMemFree",
  "zeVirtualMemQueryPageSize",
  "zeVirtualMemMap",
  "zeVirtualMemUnmap",
  "zeVirtualMemSetAccessAttribute",
  "zeVirtualMemGetAccessAttribute",
};


static std::string get_symbol(API_TRACING_ID id){
    if (id == UnknownTracingId) {
      return "UnknownAPIName";
    } else if (id > InternalStartTracingId && id < InternalEndTracingId) {
      return "dep";
    } else if (id > L0StartTracingId && id < L0EndTracingId) {
      auto index = id - L0StartTracingId;
      return tracing_api_name[index-1];
    } else {
      // Error: never come here
      return "UnknownAPIName";
    }
  }
#endif //PTI_TOOLS_COMMON_H_
